extends layout

block content
    div.intro
        h1 김밥나라 POS
        p START
    div#webgl
        canvas#reveal-effect
    div#css
    div.modal
        .order
            h1.table_name
            table.order_list
                tr
                    th 품목
                    th 단가
                    th 수량
                    th 금액
            .total
            .payments
                .orders 주문하기
                .payment 결제하기
        .product_list
            each vo,index in PRODUCT
                div.p_code(data-id= vo.p_code)
                    div.p_name= vo.p_name
                    div.p_price= vo.p_price
        .modal_close X
    .modal_overlay
            

    script.
        const modal = document.querySelector(".modal");
        const modalOverlay = document.querySelector(".modal_overlay")
        const modalClose = document.querySelector(".modal_close");
        const order_list = document.querySelector(".order_list");
        const product_list = document.querySelector(".product_list");
        let table_name = document.querySelector("h1.table_name")
        const btn_orders = document.querySelector(".orders");
        let table_list = [];

        document.querySelector("#css").addEventListener("click",(e)=>{
            const target_table = e.target;
            const className = target_table.className;
            if(className == "table" || className == "name"){
                let table_id;
                if(className == "table") {
                    table_id = target_table.dataset.id;
                } else {
                    table_id = target_table.parentNode.dataset.id;
                }
                modalOverlay.classList.add("modal_overlay2")
                modal.classList.add("modal_show")
                table_name.innerHTML = `${table_id} 번 테이블`;

            }
        })

        modalClose.addEventListener("click",() => {
            modal.classList.remove("modal_show")
            modalOverlay.classList.remove("modal_overlay2")       
        })

        product_list.addEventListener("click",(e)=>{
            const className = e.target.className;
            if(className === "p_name" || className === "p_price") {
                const p_code = e.target.parentNode.dataset.id
                const p_price = Number(e.target.parentNode.childNodes[1].innerText)
                const list = order_list.childNodes;
                for(let i = 0; i < list.length; i++){
                    if(list[i].className == p_code) {
                        let innerCount = list[i].childNodes[2].innerText
                        let innerPrice = list[i].childNodes[3].innerText
                        list[i].childNodes[2].innerHTML = Number(innerCount) + 1
                        list[i].childNodes[3].innerHTML = Number(innerPrice) + p_price;
                        totalOrder();
                        return false;
                    }
                }

                fetch(`/orders/select?p_code=${p_code}`)
                .then(res=>res.json())
                .then(result=> {
                    addOrder(
                        result.ORDERS.p_code,
                        result.ORDERS.p_name,
                        1,
                        result.ORDERS.p_price,
                        result.ORDERS.p_price)
                })
                
            }
        })

        function addOrder(p_code,p_name,count,p_price,total){
            const tr = document.createElement("tr");
            tr.className = p_code;

            const td_pname = document.createElement("td");
            td_pname.textContent = p_name;
            tr.appendChild(td_pname);

            const td_price = document.createElement("td");
            td_price.textContent = p_price;
            tr.appendChild(td_price);

            const td_count = document.createElement("td");
            td_count.textContent = count;
            tr.appendChild(td_count);

            const td_total = document.createElement("td");
            td_total.textContent = total;
            tr.appendChild(td_total);

            order_list.appendChild(tr);

            totalOrder();
        }

        function totalOrder(){
            const total = document.querySelector(".total");
            const list = order_list.childNodes;
            let order_total = 0;
            for(let i = 1; i < list.length; i++) {
                let innerPrice = Number(list[i].childNodes[3].innerText)
                order_total += Number(innerPrice);

            }
            total.innerHTML = `합계 : ${order_total}`
        }

        btn_orders.addEventListener("click",()=>{
            let o_table = Number(table_name.innerText.substr(0,2));
            const list = order_list.childNodes;
            for(let i = 1; i < list.length; i++) {
                 let table_oder = {};
                table_oder.o_table = o_table;
                table_oder.o_pcode = list[i].className;
                table_oder.o_price = list[i].childNodes[1].innerText
                table_oder.o_count = list[i].childNodes[2].innerText
                table_oder.o_total = list[i].childNodes[3].innerText
                table_list.push(table_oder)
            }
            console.log(table_list.length)
            for(let i = 0; i < table_list.length; i++){
                console.log(table_list[i].o_table)
            }

            alert("주문이 완료되었습니다")
            modal.classList.remove("modal_show")
            modalOverlay.classList.remove("modal_overlay2") 
            let table = document.querySelectorAll(".table");
            table[o_table - 1].style.backgroundColor = "#1f2739"
        })
        


